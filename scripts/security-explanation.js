console.log("🔍 EXPLICACIÓN DETALLADA DE SEGURIDAD")
console.log("=====================================")
console.log("")

console.log("🛡️  NIVEL 1: AUTENTICACIÓN")
console.log("   ✓ request.auth != null")
console.log("   → Solo usuarios logueados pueden acceder")
console.log("")

console.log("👤 NIVEL 2: AUTORIZACIÓN")
console.log("   ✓ request.auth.uid == userId")
console.log("   → Cada usuario solo accede a SUS datos")
console.log("   ✓ request.auth.uid == resource.data.userId")
console.log("   → Solo el propietario puede modificar sus gastos")
console.log("")

console.log("📝 NIVEL 3: VALIDACIÓN DE DATOS")
console.log("   ✓ Tipos de datos correctos (number, string, map)")
console.log("   ✓ Campos obligatorios presentes")
console.log("   ✓ Rangos válidos (salary >= 0, amount > 0)")
console.log("   ✓ Categorías válidas ('ahorro', 'gustos', 'angie')")
console.log("   ✓ Límites de texto (descripción <= 200 caracteres)")
console.log("")

console.log("🚫 NIVEL 4: PREVENCIÓN DE ATAQUES")
console.log("   ✓ No se puede crear gastos para otros usuarios")
console.log("   ✓ No se puede cambiar el userId de un gasto")
console.log("   ✓ No se puede acceder a colecciones no definidas")
console.log("   ✓ No se pueden insertar campos extra maliciosos")
console.log("")

console.log("🔒 CASOS BLOQUEADOS:")
console.log("   ❌ Usuario A intenta ver gastos de Usuario B")
console.log("   ❌ Usuario sin login intenta acceder")
console.log("   ❌ Crear gasto con monto negativo")
console.log("   ❌ Crear gasto en categoría inexistente")
console.log("   ❌ Modificar userId de un gasto existente")
console.log("   ❌ Acceder a colecciones como 'admin' o 'config'")
console.log("")

console.log("✅ CASOS PERMITIDOS:")
console.log("   ✓ Usuario A lee/modifica sus propios datos")
console.log("   ✓ Crear gasto válido en categoría correcta")
console.log("   ✓ Actualizar configuración con datos válidos")
console.log("   ✓ Eliminar sus propios gastos")
